{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/assets/location.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/components/projects.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx"],"names":["Location","xmlns","viewBox","className","fill","d","Header","useEmiliaConfig","name","location","assetsPath","avatar","useStaticQuery","fadeUpProps","useSpring","config","slow","from","opacity","transform","to","fadeUpPropsDelay","delay","fadeProps","fadeLongProps","as","variant","sx","textAlign","my","zIndex","div","style","overflow","borderRadius","height","width","display","boxShadow","file","childImageSharp","fixed","fontSize","position","top","left","right","p","backgroundColor","data-placeholder","svg","color","mr","justifyContent","alignItems","data-testid","mt","mb","a","mx","Projects","projects","data","length","role","aria-label","href","gridTemplateColumns","gridColumnGap","map","project","index","val","allProject","nodes","parent","fields","colorThief","shadow","shadowArray","v","key","slug","item","overlay","inGrid","ProjectsComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-fe86a4b1b0c54e7cae72.js","sourcesContent":["import React from \"react\"\n\nconst Location = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"icon-location-pin\">\n    <path\n      className=\"primary\"\n      fill=\"currentColor\"\n      d=\"M5.64 16.36a9 9 0 1 1 12.72 0l-5.65 5.66a1 1 0 0 1-1.42 0l-5.65-5.66zM12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\n    />\n    <path\n      className=\"secondary\"\n      fill=\"currentColor\"\n      d=\"M12 1a9 9 0 0 1 6.36 15.36l-5.65 5.66a1 1 0 0 1-.71.3V13a3 3 0 0 0 0-6V1z\"\n    />\n  </svg>\n)\n\nexport default Location\n","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport HeaderBackground from \"./header-background\"\nimport Location from \"../assets/location\"\nimport SocialMediaList from \"./social-media-list\"\nimport { ChildImageSharpFixed } from \"../types\"\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: ChildImageSharpFixed\n  }\n}\n\nconst Header = () => {\n  const { name, location, assetsPath } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          fixed(width: 140, height: 140, quality: 100) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeUpPropsDelay = useSpring({\n    config: config.slow,\n    delay: 250,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.projectHead\">\n      <HeaderBackground />\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\n        <animated.div style={fadeProps}>\n          <div\n            sx={{\n              overflow: `hidden`,\n              borderRadius: `full`,\n              height: [`100px`, `140px`],\n              width: [`100px`, `140px`],\n              display: `inline-block`,\n              boxShadow: `lg`,\n              \"> div:not([data-placeholder='true'])\": {\n                height: [`100px !important`, `140px !important`],\n                width: [`100px !important`, `140px !important`],\n              },\n            }}\n          >\n            {avatar?.file?.childImageSharp?.fixed ? (\n              <Img fixed={avatar.file.childImageSharp.fixed} />\n            ) : (\n              <div\n                sx={{\n                  fontSize: 0,\n                  position: `absolute`,\n                  top: 0,\n                  left: 0,\n                  width: `100% !important`,\n                  right: 0,\n                  p: 3,\n                  backgroundColor: `red.2`,\n                }}\n                data-placeholder=\"true\"\n              >\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\n              </div>\n            )}\n          </div>\n        </animated.div>\n        <animated.div style={fadeUpProps}>\n          <Heading as=\"h1\" variant=\"styles.h1\">\n            {name}\n          </Heading>\n        </animated.div>\n        <animated.div style={fadeUpPropsDelay}>\n          <Flex\n            sx={{\n              svg: {\n                width: `20px`,\n                height: `20px`,\n                \".primary\": { color: `iconPrimary` },\n                \".secondary\": { color: `iconSecondary` },\n                mr: 2,\n              },\n              justifyContent: `center`,\n              alignItems: `center`,\n              color: `text`,\n            }}\n          >\n            <Location /> {location}\n          </Flex>\n        </animated.div>\n        <div data-testid=\"social-header\" sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\n          <animated.div style={fadeLongProps}>\n            <SocialMediaList />\n          </animated.div>\n        </div>\n      </div>\n    </Flex>\n  )\n}\n\nexport default Header\n","/** @jsx jsx */\n/* eslint no-shadow: 0 */\nimport { jsx, Container, Styled, Box } from \"theme-ui\"\nimport { useSpring, animated, config } from \"react-spring\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { ChildImageSharpFluid } from \"../types\"\nimport Layout from \"./layout\"\nimport Header from \"./header\"\nimport Card from \"./card\"\n\ntype Props = {\n  projects: {\n    slug: string\n    title: string\n    cover: {\n      childImageSharp: ChildImageSharpFluid\n    }\n  }[]\n}\n\ntype ProjecsStaticQuery = {\n  allProject: {\n    nodes: {\n      parent: {\n        fields: {\n          colorThief: string[]\n        }\n      }\n    }[]\n  }\n}\n\nconst Projects = ({ projects }: Props) => {\n  const data = useStaticQuery<ProjecsStaticQuery>(graphql`\n    query {\n      allProject(sort: { fields: date, order: DESC }) {\n        nodes {\n          ... on MdxProject {\n            parent {\n              ... on Mdx {\n                fields {\n                  colorThief\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const fadeUpProps = useSpring({\n    config: config.slow,\n    delay: 600,\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n\n  if (projects.length === 0) {\n    return (\n      <Layout>\n        <Header />\n        <Container>\n          <Styled.p>\n            Hi!{` `}\n            <span role=\"img\" aria-label=\"Wave emoji\">\n              👋\n            </span>\n            {` `}\n            <br />\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\n              README\n            </Styled.a>\n            {` `}\n            to learn how to setup them.\n          </Styled.p>\n          <Styled.p>\n            <b>TL;DR:</b> <br />\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\n            Edit the frontmatter like described in the{` `}\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\n              README\n            </Styled.a>\n            .\n          </Styled.p>\n        </Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <Header />\n      <Box as=\"main\" variant=\"layout.main\">\n        <animated.div style={fadeUpProps}>\n          <Container\n            sx={{\n              mt: `-8rem`,\n              display: `grid`,\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\n              gridColumnGap: 4,\n            }}\n          >\n            {projects.map((project, index) => {\n              const val = data.allProject.nodes[index].parent.fields.colorThief\n              const shadow = `${val[0]}, ${val[1]}, ${val[2]}`\n\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\n              const shadowArray = px.map((v) => `rgba(${shadow}, 0.15) 0px ${v} ${v} 0px`)\n\n              return <Card key={project.slug} item={project} overlay={shadow} shadow={shadowArray} inGrid />\n            })}\n          </Container>\n        </animated.div>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Projects\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 770, quality: 95) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationHeight\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n}\n\nexport default function EmiliaCoreProjects({ data }: Props) {\n  const { allProject } = data\n\n  return <Projects projects={allProject.nodes} />\n}\n"],"sourceRoot":""}